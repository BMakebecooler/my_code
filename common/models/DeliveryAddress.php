<?php


namespace common\models;


use common\helpers\User as UserHelper;

class DeliveryAddress extends \yii\base\Model
{
    public $kladr_id;
    public $city_with_type;
    public $city_kladr_id;
    public $street_with_type;
    public $street_kladr_id;
    public $house;
    public $house_kladr_id;
    public $delivery_id;
    public $pvz_id;
    public $flat;
    public $postal_code;
    public $description;
    public $dadata;

    public static $sessionName = 'deliveryAddressData';

    private static $_model;

    public function rules()
    {
        return [
            [['description', 'city_with_type', 'street_with_type', 'house', 'flat', 'dadata'], 'string'],
            [['kladr_id', 'city_kladr_id', 'street_kladr_id', 'house_kladr_id', 'postal_code', 'delivery_id'], 'integer'],
            [['city_with_type'], 'required'],
            [['delivery_id'], 'required'],
            [['pvz_id'], 'required', 'when' => function ($model) {
                return $model->delivery_id == 9;
            }, 'message' => 'Необходимо выбрать пункт выдачи'],
        ];
    }

    public function attributeLabels()
    {
        return [
            'description' => 'Комментарии, пожелания',
            'flat' => 'Квартира',
        ];
    }

    public function _init($fuser = null)
    {
        if (!$fuser) {
            $fuser = \Yii::$app->shop->shopFuser;
        }
        $profile = $fuser->getProfileParams();

        //Данные для заполнения модели приоритетно из профиля, если пусто - пробуем из сессии
        $attributes = [
            'delivery_id' => $fuser->delivery_id,
            'pvz_id' => !empty($fuser->pvz['id']) ? $fuser->pvz['id'] : null,
            'description' => '',
            'kladr_id' => $profile['kladr_id'] ?: '',
            'city_with_type' => $profile['city'] ?: '',
            'city_kladr_id' => $profile['FiasCodeCity'] ?: '',
            'street_with_type' => $profile['StreetName'] ?: '',
            'street_kladr_id' => $profile['FiasCodeStreet'] ?: '',
            'house' => $profile['StreetNumber'] ?: '',
            'house_kladr_id' => $profile['FiasCodeBuilding'] ?: '',
            'flat' => $profile['DoorNumber'] ?: '',
            'postal_code' => $profile['postal_code'] ?: '',
        ];

        $this->setAttributes($attributes, false);
        parent::init(); // TODO: Change the autogenerated stub
    }

    public static function getByFuser($fuser = null)
    {
        if (!$fuser) {
            $fuser = \Yii::$app->shop->shopFuser;
        }
        $profile = $fuser->getProfileParams();
        $sessionData = \Yii::$app->session->get(self::$sessionName);

        //Данные для заполнения модели приоритетно из профиля, если пусто - пробуем из сессии
        $attributes = [
            'delivery_id' => $fuser->delivery_id,
            'pvz_id' => !empty($fuser->pvz['id']) ? $fuser->pvz['id'] : null,
            'description' => '',
            'kladr_id' => $profile['kladr_id'] ?: '',
            'city_with_type' => $profile['city'] ?: '',
            'city_kladr_id' => $profile['FiasCodeCity'] ?: '',
            'street_with_type' => $profile['StreetName'] ?: '',
            'street_kladr_id' => $profile['FiasCodeStreet'] ?: '',
            'house' => $profile['StreetNumber'] ?: '',
            'house_kladr_id' => $profile['FiasCodeBuilding'] ?: '',
            'flat' => $profile['DoorNumber'] ?: '',
            'postal_code' => $profile['postal_code'] ?: '',
        ];

        if (!self::$_model){
            self::$_model = new self();
        }

        if ($sessionData){
            self::$_model->setAttributes($sessionData, false);
        }else{
            //Если в атрибутах нет кладра, значит нормальную дадату не сохраняли и можно поставить дефолтное значение
            if (!$attributes['kladr_id'] || $attributes['kladr_id'] == '7700000000000'){
                //Объект дадаты для Москвы
                $attributes['dadata'] = [
                    'postal_code' => null,
                    'country' => 'Россия',
                    'country_iso_code' => 'RU',
                    'federal_district' => null,
                    'region_fias_id' => '0c5b2444-70a0-4932-980c-b4dc0d3f02b5',
                    'region_kladr_id' => '7700000000000',
                    'region_iso_code' => 'RU-MOW',
                    'region_with_type' => 'г Москва',
                    'region_type' => 'г',
                    'region_type_full' => 'город',
                    'region' => 'Москва',
                    'area_fias_id' => null,
                    'area_kladr_id' => null,
                    'area_with_type' => null,
                    'area_type' => null,
                    'area_type_full' => null,
                    'area' => null,
                    'city_fias_id' => '0c5b2444-70a0-4932-980c-b4dc0d3f02b5',
                    'city_kladr_id' => '7700000000000',
                    'city_with_type' => 'г Москва',
                    'city_type' => 'г',
                    'city_type_full' => 'город',
                    'city' => 'Москва',
                    'city_area' => null,
                    'city_district_fias_id' => null,
                    'city_district_kladr_id' => null,
                    'city_district_with_type' => null,
                    'city_district_type' => null,
                    'city_district_type_full' => null,
                    'city_district' => null,
                    'settlement_fias_id' => null,
                    'settlement_kladr_id' => null,
                    'settlement_with_type' => null,
                    'settlement_type' => null,
                    'settlement_type_full' => null,
                    'settlement' => null,
                    'street_fias_id' => null,
                    'street_kladr_id' => null,
                    'street_with_type' => null,
                    'street_type' => null,
                    'street_type_full' => null,
                    'street' => null,
                    'house_fias_id' => null,
                    'house_kladr_id' => null,
                    'house_type' => null,
                    'house_type_full' => null,
                    'house' => null,
                    'block_type' => null,
                    'block_type_full' => null,
                    'block' => null,
                    'flat_type' => null,
                    'flat_type_full' => null,
                    'flat' => null,
                    'flat_area' => null,
                    'square_meter_price' => null,
                    'flat_price' => null,
                    'postal_box' => null,
                    'fias_id' => '0c5b2444-70a0-4932-980c-b4dc0d3f02b5',
                    'fias_code' => '7700000000000000000',
                    'fias_level' => '1',
                    'fias_actuality_state' => '0',
                    'kladr_id' => '7700000000000',
                    'geoname_id' => '524894',
                    'capital_marker' => '0',
                    'okato' => '45000000000',
                    'oktmo' => '45000000',
                    'tax_office' => '7700',
                    'tax_office_legal' => '7700',
                    'timezone' => null,
                    'geo_lat' => '55.75396',
                    'geo_lon' => '37.620393',
                    'beltway_hit' => null,
                    'beltway_distance' => null,
                    'metro' => null,
                    'qc_geo' => null,
                    'qc_complete' => null,
                    'qc_house' => null,
                    'history_values' => null,
                    'unparsed_parts' => null,
                    'source' => null,
                    'qc' => null,
                ];
            }

            self::$_model->setAttributes($attributes, false);
        }

        return self::$_model;
    }

    //Сохраняем данные модели в связанных сущностях - профиле и сессии
    public function save()
    {
        $profileParams = [];

        $profileParams['kladr_id'] = $this->kladr_id ?: '7700000000000';

        //$profileParams['city'] = @$geoobject['data']['city'] ?: $geoobject['data']['settlement'];
        $profileParams['city'] = @$this->city_with_type ?: 'г Москва';
        $profileParams['StreetName'] = $this->street_with_type; //Название улицы
        $profileParams['StreetNumber'] = $this->house; //Номер дома
        //$profileParams['BuildNumber'] = @$geoobject['data']['block']; //Номер строения
        $profileParams['DoorNumber'] = $this->flat;

        $profileParams['FiasCodeCity'] = $this->city_kladr_id ?: '7700000000000';
        $profileParams['FiasCodeStreet'] = $this->street_kladr_id;
        $profileParams['FiasCodeBuilding'] = $this->house_kladr_id;

        $profileParams['postal_code'] = $this->postal_code;

        if (UserHelper::isAuthorize()) {
            \Yii::$app->shop->shopFuser->saveProfileParams($profileParams);
        }

        \Yii::error($this->dadata, 'debug');

        //Профиль для гостей недоступен, а сессии доступны
        \Yii::$app->session->set(self::$sessionName, $this->getAttributes());

        if (false) {
            $dadataSuggest = \Yii::$app->dadataSuggest->getAddress();
            $dadataAddress = $dadataSuggest->data ?? [];
            $dadataAddressHouseOrigin = !empty($dadataAddress['house']) ? $dadataAddress['house'] : '';//Нужно  так как из атрибутов может затереться отформатированным значением
            $dadataAddress = array_merge($dadataAddress, $this->getAttributes());
            $dadataAddress['house'] = $dadataAddressHouseOrigin;//Возвращаем оригинальное значение
            $dadataSessionData = [
                'unrestricted_value' => $profileParams['city'],
                'data' => $dadataAddress
            ];
            \Yii::$app->dadataSuggest->saveAddress($dadataSessionData);
        }

        return true;
    }
}