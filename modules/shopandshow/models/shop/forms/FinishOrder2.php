<?php

namespace modules\shopandshow\models\shop\forms;

use modules\shopandshow\models\shop\ShopOrder;
use yii\base\Model;
use common\helpers\User as UserHelper;

class FinishOrder2 extends Model
{
    public $kladr_id;
    public $city_with_type;
    public $city_kladr_id;
    public $street_with_type;
    public $street_kladr_id;
    public $house;
    public $house_kladr_id;
    public $delivery_id;
    public $pvz_id;
    public $flat;
    public $postal_code;
    public $description;

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['description', 'city_with_type', 'street_with_type', 'house', 'flat', ], 'string'],
            [['kladr_id', 'city_kladr_id', 'street_kladr_id', 'house_kladr_id', 'postal_code', 'delivery_id'], 'integer'],
            [['city_with_type'], 'required'],
            [['delivery_id'], 'required'],
            [['pvz_id'], 'required', 'when' => function($model){
                return $model->delivery_id == 9;
            }, 'message' => 'Необходимо выбрать пункт выдачи'],
        ];
    }

    /**
     * @return array
     */
    public function attributeLabels()
    {
        return [
            'description' => 'Комментарии, пожелания',
            'flat' => 'Квартира',
        ];
    }


    public function init()
    {
        $shopFuser = \Yii::$app->shop->shopFuser;
        $profile = \Yii::$app->shop->shopFuser->getProfileParams();
        try{
            $address = \Yii::$app->dadataSuggest->address->data;
        } catch (\Exception $e) {
            $address = [];
            \Yii::error($e->getMessage(), 'checkout');
        }

        //Данные для заполнения модели приоритетно из профиля, если пусто - пробуем из сессии
        $attributes = [
            'delivery_id'       => $shopFuser->delivery_id,
            'pvz_id'            => !empty($shopFuser->pvz['id']) ? $shopFuser->pvz['id'] : null,
            'description'       => '',
            'kladr_id'          => $profile['kladr_id']         ?: $address['kladr_id'],
            'city_with_type'    => $profile['city']             ?: $address['city_with_type'],
            'city_kladr_id'     => $profile['FiasCodeCity']     ?: $address['city_kladr_id'],
            'street_with_type'  => $profile['StreetName']       ?: $address['street_with_type'],
            'street_kladr_id'   => $profile['FiasCodeStreet']   ?: $address['street_kladr_id'],
            'house'             => $profile['StreetNumber']     ?: $address['house'],
            'house_kladr_id'    => $profile['FiasCodeBuilding'] ?: $address['house_kladr_id'],
            'flat'              => $profile['DoorNumber']       ?: $address['flat'],
            'postal_code'       => $profile['postal_code']      ?: $address['postal_code'],
        ];

        $this->setAttributes($attributes, false);
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * редактирование заказа
     * @param ShopOrder $model
     * @return array|bool
     */
    public function processed($model = null)
    {
//        $this->isSubscribe;
//        $this->description;

        $profileParams = [];

        $profileParams['kladr_id'] = $this->kladr_id ?: '7700000000000';

        //$profileParams['city'] = @$geoobject['data']['city'] ?: $geoobject['data']['settlement'];
        $profileParams['city'] = @$this->city_with_type ?: 'г Москва';
        $profileParams['StreetName'] = $this->street_with_type; //Название улицы
        $profileParams['StreetNumber'] = $this->house; //Номер дома
        //$profileParams['BuildNumber'] = @$geoobject['data']['block']; //Номер строения
        $profileParams['DoorNumber'] = $this->flat;

        $profileParams['FiasCodeCity'] = $this->city_kladr_id ?: '7700000000000';
        $profileParams['FiasCodeStreet'] = $this->street_kladr_id;
        $profileParams['FiasCodeBuilding'] = $this->house_kladr_id;

        $profileParams['postal_code'] = $this->postal_code;

        if (UserHelper::isAuthorize()) {
            \Yii::$app->shop->shopFuser->saveProfileParams($profileParams);
        }

        $dadataSuggest = \Yii::$app->dadataSuggest->getAddress();

        $dadataAddress = $dadataSuggest->data ?? [];

        $dadataAddressHouseOrigin = !empty($dadataAddress['house']) ? $dadataAddress['house'] : ''; //Нужно  так как из атрибутов может затереться отформатированным значением
        $dadataAddress = array_merge($dadataAddress, $this->getAttributes());
        $dadataAddress['house'] = $dadataAddressHouseOrigin; //Возвращаем оригинальное значение

        $dadataSessionData = [
            'unrestricted_value' => $profileParams['city'],
            'data' => $dadataAddress
        ];

        \Yii::$app->dadataSuggest->saveAddress($dadataSessionData);

        return true;
    }
}
