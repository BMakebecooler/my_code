<?php/** * php ./yii export/orders */namespace console\controllers\export;use skeeks\cms\models\CmsUser;use skeeks\cms\models\User;use skeeks\cms\shop\models\ShopOrder;use yii\base\Exception;use yii\helpers\Console;/** * Class OrdersController * * @package console\controllers */class OrdersControllerExport extends ExportController{    public function actionIndex()    {        $users = User::find()            ->andWhere('bitrix_id is NULL')            ->all();        foreach ($users as $user) {            if ( $user->relatedPropertiesModel->getSmartAttribute('secretCode') != null && strlen($user->relatedPropertiesModel->getSmartAttribute('LAST_NAME')) > 5 ) {                $this->stdout("Preparing to export user # {$user->id}\n");                \Yii::$app->shopAndShow->sendCreateUserBitrix($user);                $this->stdout("Done\n");            }        }        $orders = ShopOrder::find()->andWhere('bitrix_id is NULL')->andWhere('status_code!="Q"')            ->all();        foreach ($orders as $order) {            try {                $this->stdout("Preparing to export order # {$order->id}\n");////                $i = 0;////                while ( $i <= 10 ) {                    if ($order->user->bitrix_id == null) {                        $this->stdout("First - send user # {$order->user->id} to Bitrix. ");                        \Yii::$app->shopAndShow->sendCreateUserBitrix(User::findOne($order->user->id));                        $this->stdout("Done\n", Console::FG_GREEN);                        $this->stdout("We need to sleep 5s for Bitrix process UserReg\n", Console::FG_GREEN);                        sleep(5);                    }//                        $i++;//                    }//                }                $this->stdout("Second - send order # {$order->id} to Bitrix. ");                \Yii::$app->shopAndShow->sendCreateOrderBitrix($order);                $this->stdout("Done\n", Console::FG_GREEN);                $this->stdout("\n Updating order status ", Console::FG_YELLOW);                $order->status_code = 'Q';                if ( $order->save('false', ['status_code']) )                    $this->stdout("- done\n", Console::FG_GREEN);                else                    $this->stdout("- error -> " . json_encode($order->getErrors()), Console::FG_PURPLE);            } catch (Exception $e) {                $this->stdout("\n".$e->getMessage(), Console::FG_RED);                $order->save();            }        }    }    public function actionTest()    {        $order = ShopOrder::find()            ->orderBy(['id' => 'desc'])            ->one();        $this->stdout("Preparing to export order # {$order->id}\n");        $this->stdout("First - send user # {$order->user->id} to Bitrix. ");        \Yii::$app->shopAndShow->sendCreateUserBitrix(User::findOne($order->user->id));        $this->stdout("Done\n", Console::FG_GREEN);        $this->stdout("Second - send order # {$order->id} to Bitrix. ");        \Yii::$app->shopAndShow->sendCreateOrderBitrix($order);        $this->stdout("Done\n", Console::FG_GREEN);        $this->stdout("Sleep 3sec\n", Console::FG_YELLOW);        sleep(3);    }}