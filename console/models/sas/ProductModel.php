<?namespace console\models\sas;use common\models\ImportStockSaleV2;use Exception;use modules\shopandshow\models\ShopContentElement;use skeeks\cms\components\Cms;use skeeks\cms\models\CmsContentElement;use skeeks\cms\models\CmsContentPropertyEnum;use skeeks\cms\models\CmsTree;use skeeks\cms\shop\models\ShopProduct;use skeeks\cms\shop\models\ShopProductPrice;use common\models\cmsContent\CmsContent;use Yii;/** * TODO: ПЕРЕДЕЛАТЬ. ПОЛЯ ИЗМЕНИЛИСЬ. * @property string column0  "BITRIX_PRODUCT_ID" * @property string column1  "CATEGORY_ID" * @property string column2  "ACTIVE" * @property string column3  "NAME" * @property string column4  "SHORT_DESCRIPTION" * @property string column5  "LONG_DESCRIPTION" * @property string column6  "PREVIEW_PICTURE" * @property string column7  "DETAIL_PICTURE" * @property string column8  "SUBDIR" * @property string column9  "FILE_NAME" * @property string column10 "CODE" * @property string column11 "XML_ID" * @property string column12 "PROPERTY_PRIMENENIE" * @property string column13 "PROPERTY_HARAKTERISTIKI" * @property string column14 "PROPERTY_KOMPLEKTACIA" * @property string column15 "PROPERTY_PREIMUSHESTVA" * @property string column16 "PROPERTY_UHOD" * @property string column17 "PROPERTY_BEZOPASNOST" * @property string column18 "PROPERTY_GOODS_1C" * @property string column19 "PROPERTY_PRICE_BASE_1C" * @property string column20 "PROPERTY_PRICE_BASE" * @property string column21 "PROPERTY_PRICE_DISCOUNTED" * @property string column22 "PROPERTY_PRICE_DISCOUNTED_1C" * @property string column23 "PROPERTY_PRICE_TODAY" * @property string column24 "PROPERTY_PRICE_TODAY_1C" * @property string column25 "PROPERTY_LOT_NUM" * @property string column26 "PROPERTY_NOTES" * @property string column27 "PROPERTY_TV_SHOW" * @property string column28 "PROPERTY_MATERIAL" * @property string column29 "PROPERTY_PRODUCTION" * @property string column30 "PROPERTY_PHOTOS" * @property string column31 "PROPERTY_LOT_NAME" * @property string column32 "PROPERTY_PRICE_ACTIVE" * @property string column33 "PROPERTY_VES_PREDVARIT" * @property string column34 "PROPERTY_ART_SUPPLIER" * @property string column35 "PROPERTY_LOT_STATUS" * @property string column36 "PROPERTY_COUNT_1C" * @property string column37 "PROPERTY_PRICE_MODS_DIFFERENT" * @property string column38 "PROPERTY_NOT_PUBLIC" * @property string column39 "PROPERTY_VIDEO" * @property string column40 "PROPERTY_TECHNICAL_DETAILS" * @property string column41 "PROPERTY_STOP_SALE_AT" * @property string column42 "PROPERTY_VIDEO_PRICE_DISCOUNTED" * @property string column43 "PROPERTY_VIDEO_PRICE_TODAY" * @property string column44 "PROPERTY_VIDEO_PRICE_BASE" * @property string column45 "PROPERTY_BANNER_BIG" * @property string column46 "PROPERTY_BANNER_MIDDLE" * @property string column47 "PROPERTY_BANNER_MINI" * @property string column48 "PROPERTY_FRONT_NOTE" * @property string column49 "PROPERTY_BRAND" * @property string column50 "PROPERTY_PRICE_SALE" * @property string column51 "PROPERTY_PRICE_SALE_1C" * @property string column52 "PROPERTY_VIDEO_PRICE_SALE" * @property string column53 "PROPERTY_PURCHASE_PRICE" * @property string column54 "PROPERTY_BUYER" * @property string column55 "PROPERTY_PLUS_BUY" * @property string column56 "PROPERTY_INSTRUCTION" * @property string column57 "PROPERTY_PRICE_CATALOG" * @property string column58 "PROPERTY_PRICE_CATALOG_1C" * @property string column59 "PROPERTY_RECEIPT" * @property string column60 "PROPERTY_IS_MAINPAGE" * @property string column61 "PROPERTY_vote_count" * @property string column62 "PROPERTY_vote_sum" * @property string column63 "PROPERTY_rating" * @property string column64 "PROPERTY_IS_FREE_DELIVERY" * @property string column65 "PROPERTY_MANUFACTURER" * @property string column66 "PROPERTY_EXIST_IN_MOSCOW" * @property string column67 "PROPERTY_EXIST_IN_OTHER_CITY" * @property string column68 "PROPERTY_WARRANTY" * @property string column69 "PROPERTY_TEXT_MODS" * @property string column70 "PROPERTY_CODE" * @property string column71 "PROPERTY_BP_STATUS" * @property string column72 "PROPERTY_CERTIFICATES" * @property string column73 "PROPERTY_MODEL" * @property string column74 "PROPERTY_FRAGILE" * @property string column75 "PROPERTY_TEST_RESULT" * @property string column76 "PROPERTY_NAME_PARAMETER1" * @property string column77 "PROPERTY_NAME_PARAMETER2" * @property string column78 "PROPERTY_STORE_V1" * @property string column79 "PROPERTY_DELIVERY" * @property string column80 "PROPERTY_DOC_STATUS" * @property string column81 "PROPERTY_TEXT_PACKSHOT" * @property string column82 "PROPERTY_DATE_RECORDING" * @property string column83 "PROPERTY_PRODUCTION_TEXT" * @property string column84 "PROPERTY_PURCHASE_PRICE_1C" * @property string column85 "PROPERTY_CONTRACT_NUMBER_SUPPLIER" * @property string column86 "PROPERTY_ORDER_COUNT_BUYER" * @property string column87 "PROPERTY_ORDER_COUNT_ANALYTIC" * @property string column88 "PROPERTY_SUPPLIER_RULES" * @property string column89 "PROPERTY_REST" * @property string column90 "PROPERTY_TYPE" * @property string column91 "PROPERTY_TYPE_NAME" * @property string column92 "PROPERTY_NO_BRAND_PACKSHOTS" * @property string column93 "PROPERTY_ONAIR" * @property string column94 "PROPERTY_ONE_ITEM_SALE" * @property string column95 "PROPERTY_CATALOGS" * @property string column96 "PROPERTY_IN_MAGAZINE" * @property string column97 "PROPERTY_PRICE_CATALOG_N2" * @property string column98 "PROPERTY_PRICE_CATALOG_N2_1C" * @property string column99 "PROPERTY_ACTION_REF" * @property string column100 "PROPERTY_PERIOD_PRICE" * @property string column101 "PROPERTY_MINIMUM_PRICE" * @property string column102 "PROPERTY_MAXIMUM_PRICE" * @property string column103 "PROPERTY_ACTION_REF_DATE" * @property string column104 "PROPERTY_WEIGHT_MODS_DIFFERENT" * @property string column105 "PROPERTY_SEARCH_PRICE" * @property string column106 "PROPERTY_SEARCH_SIZE_CLOTHES" * @property string column107 "PROPERTY_SORT_EFIR" * @property string column108 "PROPERTY_SORT_POPULAR" * @property string column109 "PROPERTY_SORT_SALE" * @property string column110 "PROPERTY_NO_MARKET" * @property string column111 "PROPERTY_GENDER" * @property string column112 "PROPERTY_MATERIAL_MODA" * @property string column113 "PROPERTY_MATERIAL_JEWELRY" * @property string column114 "PROPERTY_MATERIAL_LINENS" * @property string column115 "PROPERTY_VOLUME_BEAUTY_AND_HEALTH" * @property string column116 "PROPERTY_JEWELRY_VSTAVKA" * @property string column117 "PROPERTY_SEASON" * @property string column118 "PROPERTY_SUBJECT_PHOTO" * @property string column119 "PROPERTY_SUPPLY_DAYS" * @property string column120 "PROPERTY_MAIN_PHOTO" * @property string column121 "PROPERTY_LOT_AVAILABILITY" * @property string column122 "PROPERTY_HIT_POPULAR" * @property string column123 "PROPERTY_ITEM_SANDS_PROMO" * @property string column124 "PROPERTY_USE_SANDS_PROMO" * @property string column125 "PROPERTY_TYPE_PRICE_ACTIVE_BEFORE_SP" * @property string column126 "PROPERTY_VALUE_PRICE_ACTIVE_BEFORE_SP" * @property string column127 "PROPERTY_CYBERMONDAY_ACTIVE" * @property string column128 "PROPERTY_CYBERMONDAY_PRIORITY" * @property string column129 "PROPERTY_VALUE_PRICE_BASE_BEFORE_CM" * @property string column130 "PROPERTY_VALUE_PRICE_SALE_BEFORE_CM" * @property string column131 "PROPERTY_TYPE_PRICE_ACTIVE_BEFORE_CM" * * Class ProductModel * @package console\models\sas */class ProductModel extends ImportModel{    private $params = [];    private static $categories = [];    public function addProduct()    {        $cmsContentElement = $this->getCmsContentElementProduct();        if ($cmsContentElement) {            $this->_updateShopProduct($cmsContentElement);            //Главное изображение если еще не задано изображения//            if ($this->column7 && !$cmsContentElement->image) {//                try {//                    var_dump($this->column7);//                    $realUrl = $this->column7;////                    $file = \Yii::$app->storage->upload($realUrl, [//                        'name' => $cmsContentElement->name//                    ]);//                    $cmsContentElement->link('image', $file);////                } catch (\Exception $e) {//                    $message = 'Not upload image to: ' . $cmsContentElement->id . " ({$realUrl})";//                    var_dump($message);//                    var_dump($e->getMessage());//                }//            }//            if (!$cmsContentElement->relatedPropertiesModel->save()) {//                var_dump($cmsContentElement->relatedPropertiesModel->getErrors());////                var_dump($cmsContentElement->relatedPropertiesModel->getAttributes());//                die();//            }        }        return $cmsContentElement;    }    private function _updateShopProduct(CmsContentElement &$cmsContentElement)    {        $shopProduct = $cmsContentElement->shopProduct;        if (!$shopProduct) {            $shopProduct = new \modules\shopandshow\models\ShopProduct();            $shopProduct->id = $cmsContentElement->id;            $shopProduct->save();//            var_dump('no exist ShopProduct');        } else {//            var_dump('exist ShopProduct');        }        if ($shopProduct) {            $priceCalc = round($this->column14 * 1.2);            $shopProduct->baseProductPriceValue = $priceCalc;            $shopProduct->baseProductPriceCurrency = "RUB";//            $shopProduct->quantity = $this->column20;            $shopProduct->product_type = ShopProduct::TYPE_SIMPLE;            if (true) {                foreach ($this->params as $param => $value) {                    if (!$this->{$value} || empty($this->{$value})) {                        continue;                    }                    /** Загрузка цен */                    if ( $param != 'PRICE_ACTIVE' && preg_match('/^PRICE/xi', $param) ) {                        if ( $param == 'PRICE_BASE' )                            $param = 'PRICE_SHOPANDSHOW';                        if ( !$shopProduct->setPriceTypeValue(str_replace('PRICE_', '', $param), $this->{$value}) )                            echo ('Не могу записать цену' . json_encode($cmsContentElement->attributes));                        continue;                    }                    $property = $cmsContentElement->relatedPropertiesModel->getRelatedProperty($param);                    if ( $property === null )                        continue;////                    throw new \skeeks\cms\Exception($param);//////////                    if (in_array($property->component, ['skeeks\cms\relatedProperties\propertyTypes\PropertyTypeList',])) {////                        if ($enum = $property->getEnums()->andWhere(['value' => $this->{$value}])->one()) {////                        } else {//                            $enum = new CmsContentPropertyEnum();//                            $enum->value = $this->{$value};//                            $enum->property_id = $property->id;//                            $enum->save();//                        }////                        if ($enum && !$enum->isNewRecord) {//                            $cmsContentElement->relatedPropertiesModel->setAttribute($param, (string) $enum->id);//                        }////                    } else                    if (in_array($property->component, ['skeeks\cms\relatedProperties\propertyTypes\PropertyTypeElement',])) {                        $cmsContent = CmsContent::find()                            ->andWhere('code = :code', [':code' => $param])                            ->limit(1)                            ->one();                        if (!$cmsContent) {                            continue;//                            throw new Exception('Нет справочника же!');                        }                        $cmsContentProperty = CmsContentElement::find()                            ->andWhere(['content_id' => $cmsContent->id])                            ->andWhere(['code' => $this->{$value}])                            ->orWhere(['name' => $this->{$value}])                            ->limit(1)                            ->one();                        if ( $cmsContentProperty === null )                            continue;                        $cmsContentElement->relatedPropertiesModel->setAttribute($param, (string) $cmsContentProperty->id);                        $cmsContentElement->relatedPropertiesModel->save();                        continue;                    }//                    else {//                        $cmsContentElement->relatedPropertiesModel->setAttribute($param, $this->{$value});//                    }                }            }            if ($shopProduct->save()) {//                var_dump('ShopProduct saved');            } else {//                var_dump('ShopProduct not saved');            }        }    }    /**     * @return null|ShopContentElement     */    public function getCmsContentElementProduct()    {        $cmsContent = ShopContentElement::find()            ->andWhere(['bitrix_id' => $this->column0])            ->limit(1)            ->one();        if (!$cmsContent) {            //Иначе создадим            $cmsContent = new ShopContentElement();            $cmsContent->tree_id = $this->getPidCmsTree();            $cmsContent->content_id = ImportStockSaleV2::CONTENT_PRODUCTS_ID; //Тип контента            $cmsContent->name = html_entity_decode($this->column3);            $cmsContent->active = ($this->column2) ? Cms::BOOL_Y : Cms::BOOL_N;            $cmsContent->bitrix_id = $this->column0;            if ($cmsContent->save()) {                /*$cmsContent->relatedPropertiesModel->setAttribute('BITRIX_PRODUCT_ID', (string)$this->column0);                if (!$cmsContent->relatedPropertiesModel->save()) {                    var_dump($cmsContent->relatedPropertiesModel->getErrors());                    die();                }*/            } else {                echo ("Not created product: " . serialize($cmsContent->getFirstErrors()));            }        } else {            return false;        }        return $cmsContent;    }    public function setParams($parameters)    {        $params = [];        foreach ($parameters as $parameter => $value) {            $params[$parameter] = str_replace('PROPERTY_', '', $value);        }        $this->params = array_flip(array_slice($params, 12));    }    /**     * @return CmsTree     */    public function getPidCmsTree()    {        if (isset(self::$categories[$this->column1])) {            return self::$categories[$this->column1];        } else {            $tree = CmsTree::find()                ->joinWith('relatedElementProperties map')                ->joinWith('relatedElementProperties.property property')                ->andWhere(['property.code' => 'vendorid'])                ->andWhere(['map.value' => $this->column1])//            ->joinWith('treeType as ttype')//            ->andWhere(['ttype.code' => 'catalog'])                ->limit(1)                ->one();            if ($tree) {                return self::$categories[$this->column1] = $tree->id;            }        }        return null;    }}