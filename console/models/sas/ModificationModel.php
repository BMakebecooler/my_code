<?namespace console\models\sas;use common\models\cmsContent\CmsContentProperty;use common\models\ImportStockSaleV2;use Exception;use skeeks\cms\components\Cms;use common\models\cmsContent\CmsContent;use skeeks\cms\models\CmsContentElement;use skeeks\cms\models\CmsContentElementProperty;use skeeks\cms\models\CmsContentPropertyEnum;use skeeks\cms\models\CmsTree;use skeeks\cms\shop\models\ShopCmsContentElement;use skeeks\cms\shop\models\ShopProduct;use Yii;/** * @property string column0  "ID" * @property string column1  "UF_XML_ID" * @property string column2  "UF_SORT" * @property string column3  "UF_FILE" * @property string column4  "UF_NAME" * @property string column5  "FILE_NAME" * * Class ModificationModel * @package console\models\sas */class ModificationModel extends ImportModel{    /**     *     * @var CmsContent     */    private static $cmsContent = null;    const CMS_CONTENT_COLOR_NAME_DICT = 'COLOR_REF';    const CMS_CONTENT_COLOR_PROPERTY_NAME = 'BITRIX_ID';    public function init()    {        parent::init();        if (!self::$cmsContent) {            $cmsContent = CmsContent::find()                ->andWhere('code = :code', [':code' => self::CMS_CONTENT_COLOR_NAME_DICT])                ->limit(1)                ->one();            if (!$cmsContent) {                $cmsContent = new CmsContent();                $cmsContent->code = self::CMS_CONTENT_COLOR_NAME_DICT;                $cmsContent->name = 'Цвет';                $cmsContent->active = Cms::BOOL_Y;                $cmsContent->content_type = 'info';                $cmsContent->is_allow_change_tree = Cms::BOOL_Y;                $cmsContent->index_for_search = Cms::BOOL_Y;                if ( !$cmsContent->save() )                    throw new \skeeks\cms\Exception(json_encode([ 'row' => $cmsContent->attributes, 'errors' => $cmsContent->getErrors()]));            }//            $cmsContentProperty = CmsContentProperty::find()//                ->andWhere(['content_id' => $cmsContent->id])//                ->andWhere(['code' => self::CMS_CONTENT_COLOR_PROPERTY_NAME])//                ->limit(1)//                ->one();////            if (!$cmsContentProperty) {//                $cmsContentProperty = new CmsContentProperty();//                $cmsContentProperty->content_id = $cmsContent->id;//                $cmsContentProperty->code = self::CMS_CONTENT_COLOR_PROPERTY_NAME;//                $cmsContentProperty->name = 'Ид с битрикса';//                $cmsContentProperty->property_type = 'N'; //СОХРАНЯЕТ S - надо разобраться//                $cmsContentProperty->list_type = 'L';//                $cmsContentProperty->is_required = Cms::BOOL_Y;//                $cmsContentProperty->component = 'skeeks\cms\relatedProperties\propertyTypes\PropertyTypeNumber';//                $cmsContentProperty->component_settings = 'a:6:{s:4:"code";s:1:"N";s:4:"name";s:10:"Число";s:13:"default_value";s:0:"";s:2:"id";s:61:"skeeks\cms\relatedProperties\propertyTypes\PropertyTypeNumber";s:8:"property";a:15:{s:6:"active";s:1:"Y";s:8:"priority";s:3:"500";s:13:"property_type";s:1:"S";s:9:"list_type";s:1:"L";s:8:"multiple";s:1:"N";s:10:"searchable";s:1:"N";s:9:"filtrable";s:1:"N";s:7:"version";i:1;s:15:"smart_filtrable";s:1:"N";s:11:"is_required";s:1:"Y";s:4:"name";s:24:"Ид с битрикса";s:4:"code";s:8:"BITRIX_ID";s:9:"component";s:61:"skeeks\cms\relatedProperties\propertyTypes\PropertyTypeNumber";s:4:"hint";s:0:"";s:10:"content_id";s:2:"13";}s:10:"activeForm";N;}';//                $cmsContentProperty->save();//            }            self::$cmsContent = $cmsContent;        }    }    public function addColor()    {        $cmsContentElement = ShopCmsContentElement::find()//            ->innerJoinWith('relatedElementProperties map')//            ->joinWith('relatedElementProperties.property property')            ->andWhere(['cms_content_element.content_id' => self::$cmsContent->id])//            ->andWhere(['property.code' => self::CMS_CONTENT_COLOR_PROPERTY_NAME])            ->andWhere(['cms_content_element.code' => $this->column1])            ->limit(1)            ->one();        if (!$cmsContentElement) {            $cmsContentElement = self::$cmsContent->createElement();        } else {//            var_dump('Значение уже есть');            return false;        }        $cmsContentElement->name = $this->column4;        $cmsContentElement->code = $this->column1;        $cmsContentElement->priority = $this->column2;//        $cmsContentElement->bitrix_id = $this->column0;        $realUrl = $this->column5;        if ($realUrl) {            try {                $file = \Yii::$app->storage->upload($realUrl, [                    'name' => $cmsContentElement->name,                ]);                $cmsContentElement->link('image', $file);            } catch (\Exception $e) {                $message = 'Not upload image to: ' . $cmsContentElement->id . " ({$realUrl})";                var_dump($message);                var_dump($e->getMessage());            }        }        if ($cmsContentElement->save()) {//            if (!$cmsContentElement->relatedPropertiesModel->save()) {//                var_dump($cmsContentElement->relatedPropertiesModel->getErrors());//                die();//            }        } else {            var_dump($cmsContentElement->getErrors());            var_dump($cmsContentElement->code);//            die();        }        return true;    }}