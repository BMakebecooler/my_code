<?namespace console\models\sas;use common\models\cmsContent\CmsContentProperty;use Exception;use skeeks\cms\components\Cms;use common\models\cmsContent\CmsContent;use skeeks\cms\models\CmsContentElement;use skeeks\cms\models\CmsContentElementProperty;use skeeks\cms\models\CmsContentPropertyEnum;use skeeks\cms\models\CmsTree;use skeeks\cms\shop\models\ShopCmsContentElement;use skeeks\cms\shop\models\ShopProduct;use Yii;/** * @property string column0  "CODE" * @property string column1  "BITRIX_ID" * @property string column2  "BITRIX_PRODUCT_ID" * @property string column3  "VALUE" * * Class ItemPropertyValueModel * @package console\models\sas */class ItemPropertyValueModel extends ImportModel{    /**     * @var CmsContentElement     */    private static $shopContentElement = null;    private static $cmsContent = null;    private static $cmsContentProperty = null;    public function init()    {        parent::init();        if (!self::$shopContentElement) {            $shopContentElement = ShopCmsContentElement::find()                ->andWhere('bitrix_id = :bitrix_id', [':bitrix_id' => $this->column2])                ->limit(1)                ->one();            /** Нет товара/предложения */            if (!$shopContentElement) {                return false;            }            self::$shopContentElement = $shopContentElement;            $cmsContent = CmsContent::find()                ->andWhere('code = :code', [':code' => $this->column0])                ->limit(1)                ->one();            if (!$cmsContent) {                throw new Exception('Нет справочника же!');            }            self::$cmsContent = $cmsContent;            $cmsContentProperty = CmsContentElement::find()                ->andWhere(['content_id' => $cmsContent->id])                ->andWhere(['code' => $this->column3])                ->orWhere(['name' => $this->column3])                ->limit(1)                ->one();            if (!$cmsContentProperty) {                throw new Exception('Нет значения в справочнике!');            }            self::$cmsContentProperty = $cmsContentProperty;        }    }    public function addValue()    {        var_dump([            self::$shopContentElement->shopProduct->id,            self::$cmsContent->code,            self::$cmsContentProperty->id        ]);        die();        self::$shopContentElement->relatedPropertiesModel->setAttribute(self::$cmsContent->code, self::$cmsContentProperty->id);        if (self::$shopContentElement->save()) {            if (!self::$shopContentElement->relatedPropertiesModel->save()) {                var_dump(self::$shopContentElement->relatedPropertiesModel->getErrors());                die();            }        } else {            var_dump($cmsContentElement->getErrors());            var_dump($cmsContentElement->code);//            die();        }        return true;    }}